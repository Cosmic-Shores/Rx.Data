name: CI Publish

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .Net Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Build
        run: dotnet build --configuration Release
      - name: Test
        run: dotnet test --verbosity normal
      - uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: reports/Rx.Data.Tests.trx
          retention-days: 1
      - name: Publish Rx.Extendibility
        uses: brandedoutcast/publish-nuget@v2.5.2
        with:
          PROJECT_FILE_PATH: src/Rx.Extendibility/Rx.Extendibility.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
      - name: Publish Rx.Data
        uses: brandedoutcast/publish-nuget@v2.5.2
        with:
          PROJECT_FILE_PATH: src/Rx.Data/Rx.Data.csproj
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
  report:
    if: ${{ always() }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: dorny/test-reporter@v1
      with:
        artifact: test-results            # artifact name
        name: NUnit Tests                  # Name of the check run which will be created
        path: '*.trx'                     # Path to test results (inside artifact .zip)
        reporter: dotnet-trx              # Format of test results